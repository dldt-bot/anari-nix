From 9efd4d1add38ba8af8638bb3d90ec7066dbbe034 Mon Sep 17 00:00:00 2001
From: Thomas Arcila <134677+tarcila@users.noreply.github.com>
Date: Fri, 2 May 2025 17:46:56 -0400
Subject: [PATCH 4/4] Fix compilation using TypeFloat and other TypeDescs

---
 device/Geometry.cpp     | 12 ++++++------
 device/SpatialField.cpp |  3 ++-
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/device/Geometry.cpp b/device/Geometry.cpp
index ac2611d..443193e 100644
--- a/device/Geometry.cpp
+++ b/device/Geometry.cpp
@@ -178,7 +178,7 @@ void Triangle::setVertexColor(ccl::Mesh *mesh) const
   anari::DataType type = array->elementType();
 
   Attribute *attr = mesh->attributes.add(
-      ustring("vertex.color"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+      ustring("vertex.color"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
   attr->std = ATTR_STD_VERTEX_COLOR;
   float3 *dst = attr->data_float3();
   for (uint32_t i = 0; i < array->size(); i++) {
@@ -359,7 +359,7 @@ void Sphere::setAttributes(ccl::PointCloud *pc) const
 
   if (m_vertexColor) {
     Attribute *attr = pc->attributes.add(
-        ustring("vertex.color"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+        ustring("vertex.color"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
     attr->std = ATTR_STD_VERTEX_COLOR;
     dstC = attr->data_float3();
     srcC = m_vertexColor->data();
@@ -368,7 +368,7 @@ void Sphere::setAttributes(ccl::PointCloud *pc) const
 
   if (m_vertexAttribute0) {
     Attribute *attr = pc->attributes.add(
-        ustring("vertex.attribute0"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+        ustring("vertex.attribute0"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
     attr->std = ATTR_STD_VERTEX_COLOR;
     dst0 = attr->data_float3();
     src0 = m_vertexAttribute0->data();
@@ -377,7 +377,7 @@ void Sphere::setAttributes(ccl::PointCloud *pc) const
 
   if (m_vertexAttribute1) {
     Attribute *attr = pc->attributes.add(
-        ustring("vertex.attribute1"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+        ustring("vertex.attribute1"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
     attr->std = ATTR_STD_VERTEX_COLOR;
     dst1 = attr->data_float3();
     src1 = m_vertexAttribute1->data();
@@ -386,7 +386,7 @@ void Sphere::setAttributes(ccl::PointCloud *pc) const
 
   if (m_vertexAttribute2) {
     Attribute *attr = pc->attributes.add(
-        ustring("vertex.attribute2"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+        ustring("vertex.attribute2"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
     attr->std = ATTR_STD_VERTEX_COLOR;
     dst2 = attr->data_float3();
     src2 = m_vertexAttribute2->data();
@@ -395,7 +395,7 @@ void Sphere::setAttributes(ccl::PointCloud *pc) const
 
   if (m_vertexAttribute3) {
     Attribute *attr = pc->attributes.add(
-        ustring("vertex.attribute3"), TypeDesc::TypeColor, ATTR_ELEMENT_VERTEX);
+        ustring("vertex.attribute3"), ccl::TypeColor, ATTR_ELEMENT_VERTEX);
     attr->std = ATTR_STD_VERTEX_COLOR;
     dst3 = attr->data_float3();
     src3 = m_vertexAttribute3->data();
diff --git a/device/SpatialField.cpp b/device/SpatialField.cpp
index d2cacb1..077ffce 100644
--- a/device/SpatialField.cpp
+++ b/device/SpatialField.cpp
@@ -10,6 +10,7 @@
 // cycles
 #include "scene/volume.h"
 #include "util/hash.h"
+#include "util/param.h"
 
 namespace anari_cycles {
 
@@ -80,7 +81,7 @@ std::unique_ptr<ccl::Geometry> StructuredRegularField::makeCyclesGeometry()
 #endif
 
   Attribute *attr = volume->attributes.add(
-      ustring("voxels"), TypeDesc::TypeFloat, ATTR_ELEMENT_VOXEL);
+      ustring("voxels"), ccl::TypeFloat, ATTR_ELEMENT_VOXEL);
   auto loader = std::make_unique<ANARIImageLoader>(this);
   ImageParams params;
   auto &state = *deviceState();
-- 
2.49.0

